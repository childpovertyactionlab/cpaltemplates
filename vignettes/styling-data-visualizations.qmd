---
title: "CPAL Data Visualization Guide"
format: html
editor: visual
---

# Using CPAL ggplot and Grob Functions

The `cpaltemplates` package provides several functions to create beautifully formatted plots and charts based on \[ggplot2\] and grid-based graphical objects (grobs). Here, we'll walk through key functions for adding titles, subtitles, and custom themes, as well as using them to build cohesive, publication-ready plots.

## Key Functions

1.  `cpal_plot()`:

-   This is the central function for combining multiple grobs or plot components into one cohesive plot.
-   Example:

```{r}
library(ggplot2)

# Create a scatter plot using ggplot2
p <- ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point()

# Add CPAL title and subtitle
title <- cpal_title("Car Weight vs. MPG")
subtitle <- cpal_subtitle("Data Source: mtcars")

# Combine the plot and titles using cpal_plot
cpal_plot(title, subtitle, p)
```

2.  `cpal_title()` & `cpal_subtitle()`:

-   These functions allow you to add formatted titles and subtitles to your plot.
-   Example:

```{r}
# Creating title and subtitle
title <- cpal_title("Main Title")
subtitle <- cpal_subtitle("Descriptive subtitle")

# Combine the plot and titles using cpal_plot
cpal_plot(title, subtitle, p)
```

3.  `add_axis()`:

-   Adds or removes axes for specified dimensions in a plot.
-   Example:

```{r}
ggplot(mtcars, aes(x = wt, y = mpg)) +
  geom_point() +
  add_axis("x")  # Adds an x-axis
```

4.  `remove_ticks()`:

-   Removes tick marks from specified axes.
-   Example:

```{r}
ggplot(mtcars, aes(x = wt, y = mpg)) +
  geom_point() +
  remove_ticks("both")  # Removes ticks from both axes
```

5.  `remove_legend()`:

-   Removes the legend from the plot.
-   Example:

```{r}
p <- ggplot(mtcars, aes(x = wt, y = mpg)) +
  geom_point(aes(color = factor(gear)))

p

p + remove_legend(p)  # Removes the legend
```

6.  `cpal_note()` & `cpal_source()`:

-   These functions allow you to add formatted notes and sources to your plot.
-   Example:

```{r}
note <- cpal_note("Note: Data is from 1974.")
source <- cpal_source("Source: Motor Trend Magazine")

cpal_plot(p, note, source)  # Combine plot with note and source
```

7.  `scatter_grid()`:

-   Adds vertical grid lines to a scatter plot.
-   Example:

```{r}
ggplot(mtcars, aes(x = wt, y = mpg)) +
  geom_point() +
  scatter_grid()  # Adds vertical grid lines
```

## Custom Theming

The package includes CPAL-specific themes for maps and printed reports:

-   `theme_cpal_map()`: Ideal for maps, with a continuous or discrete scale.
-   `theme_cpal_print()`: For publication-ready plots with a clean, minimalistic style. Apply them as follows:

```{r}
ggplot(mtcars, aes(x = wt, y = mpg)) +
  geom_point() +
  theme_cpal_map(scale = "continuous")  # For map style

ggplot(mtcars, aes(x = wt, y = mpg)) +
  geom_point() +
  theme_cpal_print()  # For print-ready style
```

By using these functions, you can create consistent, professional plots tailored to the Child Poverty Action Lab's (CPAL) style.
